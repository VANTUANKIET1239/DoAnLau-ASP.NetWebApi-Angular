// <auto-generated />
using System;
using DoAnLau_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DoAnLau_API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230701203424_newDB")]
    partial class newDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DoAnLau_API.Models.Address", b =>
                {
                    b.Property<string>("Address_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<string>("AddressDetail")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType(" varchar(100)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType(" varchar(15)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<string>("User_Id")
                        .IsRequired()
                        .HasColumnType("nchar(5)");

                    b.Property<string>("Ward")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Address_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("DoAnLau_API.Models.Branch", b =>
                {
                    b.Property<string>("Branch_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<string>("AddressDetail")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType(" nvarchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("OpeningTime")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<string>("Ward")
                        .IsRequired()
                        .HasColumnType(" nvarchar(20)");

                    b.HasKey("Branch_Id");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("DoAnLau_API.Models.City", b =>
                {
                    b.Property<string>("City_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("City_Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("DoAnLau_API.Models.District", b =>
                {
                    b.Property<string>("District_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<string>("City_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("District_Id");

                    b.HasIndex("City_Id");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("DoAnLau_API.Models.Menu", b =>
                {
                    b.Property<string>("Menu_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<bool>("BestSaller")
                        .HasColumnType("bit");

                    b.Property<bool>("HotDeal")
                        .HasColumnType("bit");

                    b.Property<string>("MenuCategory_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<string>("MenuImage")
                        .IsRequired()
                        .HasColumnType("varchar(400)");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.HasKey("Menu_Id");

                    b.HasIndex("MenuCategory_Id");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("DoAnLau_API.Models.MenuCategory", b =>
                {
                    b.Property<string>("MenuCategory_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.HasKey("MenuCategory_Id");

                    b.ToTable("MenuCategories");
                });

            modelBuilder.Entity("DoAnLau_API.Models.Order", b =>
                {
                    b.Property<string>("Order_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Promotion_Id")
                        .IsRequired()
                        .HasColumnType("nchar(5)");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("int");

                    b.Property<string>("User_Id")
                        .IsRequired()
                        .HasColumnType("nchar(5)");

                    b.HasKey("Order_Id");

                    b.HasIndex("Promotion_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("DoAnLau_API.Models.Order_Detail", b =>
                {
                    b.Property<string>("Order_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<string>("OrderDetail_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<string>("MenuImage")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("MenuTotalPrice")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Order_Id", "OrderDetail_Id");

                    b.HasIndex("Order_Id")
                        .IsUnique();

                    b.ToTable("Order_Details");
                });

            modelBuilder.Entity("DoAnLau_API.Models.Promotion", b =>
                {
                    b.Property<string>("Promotion_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PromotionDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PromotionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<string>("ValidityPeriod")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.HasKey("Promotion_Id");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("DoAnLau_API.Models.PromotionBranch", b =>
                {
                    b.Property<string>("Promotion_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<string>("Branch_Id")
                        .HasColumnType("nchar(5)");

                    b.HasKey("Promotion_Id", "Branch_Id");

                    b.HasIndex("Branch_Id");

                    b.ToTable("PromotionBranchs");
                });

            modelBuilder.Entity("DoAnLau_API.Models.PromotionUser", b =>
                {
                    b.Property<string>("Promotion_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<string>("User_Id")
                        .HasColumnType("nchar(5)");

                    b.HasKey("Promotion_Id", "User_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("PromotionUsers");
                });

            modelBuilder.Entity("DoAnLau_API.Models.Reservation", b =>
                {
                    b.Property<string>("Reservation_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<string>("Branch_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReservationTime")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.HasKey("Reservation_Id");

                    b.HasIndex("Branch_Id");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("DoAnLau_API.Models.ReservationUser", b =>
                {
                    b.Property<string>("Reservation_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<string>("User_Id")
                        .HasColumnType("nchar(5)");

                    b.HasKey("Reservation_Id", "User_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("ReservationUsers");
                });

            modelBuilder.Entity("DoAnLau_API.Models.User", b =>
                {
                    b.Property<string>("User_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType(" varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<int>("RewardPoints")
                        .HasColumnType("int");

                    b.Property<bool>("Role")
                        .HasColumnType("bit");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.HasKey("User_Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DoAnLau_API.Models.Ward", b =>
                {
                    b.Property<string>("Ward_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<string>("District_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<string>("WardName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Ward_Id");

                    b.HasIndex("District_Id");

                    b.ToTable("Wards");
                });

            modelBuilder.Entity("DoAnLau_API.Models.Address", b =>
                {
                    b.HasOne("DoAnLau_API.Models.User", "User")
                        .WithMany("Addresses")
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DoAnLau_API.Models.District", b =>
                {
                    b.HasOne("DoAnLau_API.Models.City", "City")
                        .WithMany("Districts")
                        .HasForeignKey("City_Id");

                    b.Navigation("City");
                });

            modelBuilder.Entity("DoAnLau_API.Models.Menu", b =>
                {
                    b.HasOne("DoAnLau_API.Models.MenuCategory", "MenuCategory")
                        .WithMany("Menus")
                        .HasForeignKey("MenuCategory_Id");

                    b.Navigation("MenuCategory");
                });

            modelBuilder.Entity("DoAnLau_API.Models.Order", b =>
                {
                    b.HasOne("DoAnLau_API.Models.Promotion", "Promotion")
                        .WithMany("Orders")
                        .HasForeignKey("Promotion_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAnLau_API.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Promotion");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DoAnLau_API.Models.Order_Detail", b =>
                {
                    b.HasOne("DoAnLau_API.Models.Order", "Order")
                        .WithOne("Order_Detail")
                        .HasForeignKey("DoAnLau_API.Models.Order_Detail", "Order_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DoAnLau_API.Models.PromotionBranch", b =>
                {
                    b.HasOne("DoAnLau_API.Models.Promotion", "Promotion")
                        .WithMany("PromotionBranches")
                        .HasForeignKey("Branch_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAnLau_API.Models.Branch", "Branch")
                        .WithMany("PromotionBranches")
                        .HasForeignKey("Promotion_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("DoAnLau_API.Models.PromotionUser", b =>
                {
                    b.HasOne("DoAnLau_API.Models.User", "User")
                        .WithMany("PromotionUsers")
                        .HasForeignKey("Promotion_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAnLau_API.Models.Promotion", "Promotion")
                        .WithMany("PromotionUsers")
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Promotion");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DoAnLau_API.Models.Reservation", b =>
                {
                    b.HasOne("DoAnLau_API.Models.Branch", "Branch")
                        .WithMany("Reservations")
                        .HasForeignKey("Branch_Id");

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("DoAnLau_API.Models.ReservationUser", b =>
                {
                    b.HasOne("DoAnLau_API.Models.User", "User")
                        .WithMany("ReservationUsers")
                        .HasForeignKey("Reservation_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAnLau_API.Models.Reservation", "Reservation")
                        .WithMany("ReservationUsers")
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reservation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DoAnLau_API.Models.Ward", b =>
                {
                    b.HasOne("DoAnLau_API.Models.District", "District")
                        .WithMany("Wards")
                        .HasForeignKey("District_Id");

                    b.Navigation("District");
                });

            modelBuilder.Entity("DoAnLau_API.Models.Branch", b =>
                {
                    b.Navigation("PromotionBranches");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("DoAnLau_API.Models.City", b =>
                {
                    b.Navigation("Districts");
                });

            modelBuilder.Entity("DoAnLau_API.Models.District", b =>
                {
                    b.Navigation("Wards");
                });

            modelBuilder.Entity("DoAnLau_API.Models.MenuCategory", b =>
                {
                    b.Navigation("Menus");
                });

            modelBuilder.Entity("DoAnLau_API.Models.Order", b =>
                {
                    b.Navigation("Order_Detail")
                        .IsRequired();
                });

            modelBuilder.Entity("DoAnLau_API.Models.Promotion", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("PromotionBranches");

                    b.Navigation("PromotionUsers");
                });

            modelBuilder.Entity("DoAnLau_API.Models.Reservation", b =>
                {
                    b.Navigation("ReservationUsers");
                });

            modelBuilder.Entity("DoAnLau_API.Models.User", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Orders");

                    b.Navigation("PromotionUsers");

                    b.Navigation("ReservationUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
