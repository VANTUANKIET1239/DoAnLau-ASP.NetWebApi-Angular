// <auto-generated />
using System;
using DoAnLau_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DoAnLau_API.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DoAnLau_API.Models.Address", b =>
                {
                    b.Property<string>("address_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<string>("addressDetail")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("district")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType(" varchar(100)");

                    b.Property<bool>("isDefault")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType(" varchar(15)");

                    b.Property<bool>("state")
                        .HasColumnType("bit");

                    b.Property<string>("user_Id")
                        .IsRequired()
                        .HasColumnType("nchar(5)");

                    b.Property<string>("ward")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("address_Id");

                    b.HasIndex("user_Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("DoAnLau_API.Models.Branch", b =>
                {
                    b.Property<string>("branch_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<string>("addressDetail")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("branchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("district")
                        .IsRequired()
                        .HasColumnType(" nvarchar(20)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("openingTime")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<bool>("state")
                        .HasColumnType("bit");

                    b.Property<string>("ward")
                        .IsRequired()
                        .HasColumnType(" nvarchar(20)");

                    b.HasKey("branch_Id");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("DoAnLau_API.Models.City", b =>
                {
                    b.Property<string>("city_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<string>("cityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("city_Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("DoAnLau_API.Models.District", b =>
                {
                    b.Property<string>("district_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<string>("city_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<string>("districtName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("district_Id");

                    b.HasIndex("city_Id");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("DoAnLau_API.Models.Menu", b =>
                {
                    b.Property<string>("nenu_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<bool>("bestSaller")
                        .HasColumnType("bit");

                    b.Property<bool>("hotDeal")
                        .HasColumnType("bit");

                    b.Property<string>("menuCategory_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<string>("nenuImage")
                        .IsRequired()
                        .HasColumnType("varchar(400)");

                    b.Property<string>("nenuName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<bool>("state")
                        .HasColumnType("bit");

                    b.HasKey("nenu_Id");

                    b.HasIndex("menuCategory_Id");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("DoAnLau_API.Models.MenuCategory", b =>
                {
                    b.Property<string>("menuCategory_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<string>("categoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("state")
                        .HasColumnType("bit");

                    b.HasKey("menuCategory_Id");

                    b.ToTable("MenuCategories");
                });

            modelBuilder.Entity("DoAnLau_API.Models.News", b =>
                {
                    b.Property<string>("news_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("state")
                        .HasColumnType("bit");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("news_Id");

                    b.ToTable("News");
                });

            modelBuilder.Entity("DoAnLau_API.Models.Order", b =>
                {
                    b.Property<string>("order_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(400)");

                    b.Property<DateTime>("orderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("paymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("promotion_Id")
                        .IsRequired()
                        .HasColumnType("nchar(5)");

                    b.Property<int>("totalPrice")
                        .HasColumnType("int");

                    b.Property<string>("user_Id")
                        .IsRequired()
                        .HasColumnType("nchar(5)");

                    b.HasKey("order_Id");

                    b.HasIndex("promotion_Id");

                    b.HasIndex("user_Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("DoAnLau_API.Models.Order_Detail", b =>
                {
                    b.Property<string>("order_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<string>("orderDetail_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<int>("menuTotalPrice")
                        .HasColumnType("int");

                    b.Property<string>("menunenu_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("order_Id", "orderDetail_Id");

                    b.HasIndex("menunenu_Id");

                    b.HasIndex("order_Id")
                        .IsUnique();

                    b.ToTable("Order_Details");
                });

            modelBuilder.Entity("DoAnLau_API.Models.Promotion", b =>
                {
                    b.Property<string>("promotion_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<string>("PromotionImage")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<DateTime>("expirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("promotionDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("promotionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("state")
                        .HasColumnType("bit");

                    b.Property<string>("validityPeriod")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.HasKey("promotion_Id");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("DoAnLau_API.Models.PromotionBranch", b =>
                {
                    b.Property<string>("promotion_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<string>("branch_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<bool>("state")
                        .HasColumnType("bit");

                    b.HasKey("promotion_Id", "branch_Id");

                    b.HasIndex("branch_Id");

                    b.ToTable("PromotionBranchs");
                });

            modelBuilder.Entity("DoAnLau_API.Models.PromotionDetail", b =>
                {
                    b.Property<string>("promotionDetail_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("promotionDetail_Id");

                    b.ToTable("PromotionDetails");
                });

            modelBuilder.Entity("DoAnLau_API.Models.PromotionDetailPromotion", b =>
                {
                    b.Property<string>("promotion_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<string>("promotionDetail_Id")
                        .HasColumnType("nchar(5)");

                    b.HasKey("promotion_Id", "promotionDetail_Id");

                    b.HasIndex("promotionDetail_Id");

                    b.ToTable("PromotionDetailPromotions");
                });

            modelBuilder.Entity("DoAnLau_API.Models.PromotionUser", b =>
                {
                    b.Property<string>("promotion_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<string>("user_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<bool>("state")
                        .HasColumnType("bit");

                    b.HasKey("promotion_Id", "user_Id");

                    b.HasIndex("user_Id");

                    b.ToTable("PromotionUsers");
                });

            modelBuilder.Entity("DoAnLau_API.Models.Reservation", b =>
                {
                    b.Property<string>("reservation_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("branch_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<TimeSpan>("reservationTime")
                        .HasColumnType("time");

                    b.Property<bool>("state")
                        .HasColumnType("bit");

                    b.HasKey("reservation_Id");

                    b.HasIndex("branch_Id");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("DoAnLau_API.Models.ReservationUser", b =>
                {
                    b.Property<string>("reservation_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<string>("user_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<bool>("state")
                        .HasColumnType("bit");

                    b.HasKey("reservation_Id", "user_Id");

                    b.HasIndex("user_Id");

                    b.ToTable("ReservationUsers");
                });

            modelBuilder.Entity("DoAnLau_API.Models.User", b =>
                {
                    b.Property<string>("user_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<byte[]>("UserImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("birthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType(" varchar(100)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<int>("rewardPoints")
                        .HasColumnType("int");

                    b.Property<bool>("role")
                        .HasColumnType("bit");

                    b.Property<bool>("state")
                        .HasColumnType("bit");

                    b.HasKey("user_Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DoAnLau_API.Models.Ward", b =>
                {
                    b.Property<string>("ward_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<string>("district_Id")
                        .HasColumnType("nchar(5)");

                    b.Property<string>("wardName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ward_Id");

                    b.HasIndex("district_Id");

                    b.ToTable("Wards");
                });

            modelBuilder.Entity("DoAnLau_API.Models.Address", b =>
                {
                    b.HasOne("DoAnLau_API.Models.User", "user")
                        .WithMany("addresses")
                        .HasForeignKey("user_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("DoAnLau_API.Models.District", b =>
                {
                    b.HasOne("DoAnLau_API.Models.City", "city")
                        .WithMany("districts")
                        .HasForeignKey("city_Id");

                    b.Navigation("city");
                });

            modelBuilder.Entity("DoAnLau_API.Models.Menu", b =>
                {
                    b.HasOne("DoAnLau_API.Models.MenuCategory", "menuCategory")
                        .WithMany("menus")
                        .HasForeignKey("menuCategory_Id");

                    b.Navigation("menuCategory");
                });

            modelBuilder.Entity("DoAnLau_API.Models.Order", b =>
                {
                    b.HasOne("DoAnLau_API.Models.Promotion", "promotion")
                        .WithMany("orders")
                        .HasForeignKey("promotion_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAnLau_API.Models.User", "user")
                        .WithMany("orders")
                        .HasForeignKey("user_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("promotion");

                    b.Navigation("user");
                });

            modelBuilder.Entity("DoAnLau_API.Models.Order_Detail", b =>
                {
                    b.HasOne("DoAnLau_API.Models.Menu", "menu")
                        .WithMany("order_Details")
                        .HasForeignKey("menunenu_Id");

                    b.HasOne("DoAnLau_API.Models.Order", "order")
                        .WithOne("order_Detail")
                        .HasForeignKey("DoAnLau_API.Models.Order_Detail", "order_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("menu");

                    b.Navigation("order");
                });

            modelBuilder.Entity("DoAnLau_API.Models.PromotionBranch", b =>
                {
                    b.HasOne("DoAnLau_API.Models.Promotion", "promotion")
                        .WithMany("promotionBranches")
                        .HasForeignKey("branch_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAnLau_API.Models.Branch", "branch")
                        .WithMany("promotionBranches")
                        .HasForeignKey("promotion_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("branch");

                    b.Navigation("promotion");
                });

            modelBuilder.Entity("DoAnLau_API.Models.PromotionDetailPromotion", b =>
                {
                    b.HasOne("DoAnLau_API.Models.Promotion", "promotion")
                        .WithMany("promotionDetailPromotions")
                        .HasForeignKey("promotionDetail_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAnLau_API.Models.PromotionDetail", "promotionDetail")
                        .WithMany("promotionDetailPromotions")
                        .HasForeignKey("promotion_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("promotion");

                    b.Navigation("promotionDetail");
                });

            modelBuilder.Entity("DoAnLau_API.Models.PromotionUser", b =>
                {
                    b.HasOne("DoAnLau_API.Models.User", "user")
                        .WithMany("promotionUsers")
                        .HasForeignKey("promotion_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAnLau_API.Models.Promotion", "promotion")
                        .WithMany("promotionUsers")
                        .HasForeignKey("user_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("promotion");

                    b.Navigation("user");
                });

            modelBuilder.Entity("DoAnLau_API.Models.Reservation", b =>
                {
                    b.HasOne("DoAnLau_API.Models.Branch", "branch")
                        .WithMany("reservations")
                        .HasForeignKey("branch_Id");

                    b.Navigation("branch");
                });

            modelBuilder.Entity("DoAnLau_API.Models.ReservationUser", b =>
                {
                    b.HasOne("DoAnLau_API.Models.User", "user")
                        .WithMany("reservationUsers")
                        .HasForeignKey("reservation_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAnLau_API.Models.Reservation", "reservation")
                        .WithMany("reservationUsers")
                        .HasForeignKey("user_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("reservation");

                    b.Navigation("user");
                });

            modelBuilder.Entity("DoAnLau_API.Models.Ward", b =>
                {
                    b.HasOne("DoAnLau_API.Models.District", "district")
                        .WithMany("wards")
                        .HasForeignKey("district_Id");

                    b.Navigation("district");
                });

            modelBuilder.Entity("DoAnLau_API.Models.Branch", b =>
                {
                    b.Navigation("promotionBranches");

                    b.Navigation("reservations");
                });

            modelBuilder.Entity("DoAnLau_API.Models.City", b =>
                {
                    b.Navigation("districts");
                });

            modelBuilder.Entity("DoAnLau_API.Models.District", b =>
                {
                    b.Navigation("wards");
                });

            modelBuilder.Entity("DoAnLau_API.Models.Menu", b =>
                {
                    b.Navigation("order_Details");
                });

            modelBuilder.Entity("DoAnLau_API.Models.MenuCategory", b =>
                {
                    b.Navigation("menus");
                });

            modelBuilder.Entity("DoAnLau_API.Models.Order", b =>
                {
                    b.Navigation("order_Detail")
                        .IsRequired();
                });

            modelBuilder.Entity("DoAnLau_API.Models.Promotion", b =>
                {
                    b.Navigation("orders");

                    b.Navigation("promotionBranches");

                    b.Navigation("promotionDetailPromotions");

                    b.Navigation("promotionUsers");
                });

            modelBuilder.Entity("DoAnLau_API.Models.PromotionDetail", b =>
                {
                    b.Navigation("promotionDetailPromotions");
                });

            modelBuilder.Entity("DoAnLau_API.Models.Reservation", b =>
                {
                    b.Navigation("reservationUsers");
                });

            modelBuilder.Entity("DoAnLau_API.Models.User", b =>
                {
                    b.Navigation("addresses");

                    b.Navigation("orders");

                    b.Navigation("promotionUsers");

                    b.Navigation("reservationUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
